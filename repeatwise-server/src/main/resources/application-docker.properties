# ==============================================
# DOCKER CONFIGURATION
# ==============================================
spring.application.name=repeatwise-server
server.port=8080

# ==============================================
# DATABASE CONFIGURATION (Docker)
# ==============================================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/repeatwise_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:giapnt}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:abcd1234}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.default_schema=repeatwise

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Connection Pool (Optimized for Docker)
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# Flyway Migration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.create-schemas=true
spring.flyway.schemas=repeatwise
spring.flyway.default-schema=repeatwise
spring.flyway.clean-disabled=false

# ==============================================
# REDIS CACHE CONFIGURATION
# ==============================================
spring.redis.host=${SPRING_REDIS_HOST:redis}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.timeout=2000ms
spring.redis.lettuce.pool.max-active=20
spring.redis.lettuce.pool.max-idle=10
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-wait=1000ms

# ==============================================
# LOGGING CONFIGURATION
# ==============================================
logging.level.root=INFO
logging.level.com.repeatwise=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/repeatwise-server.log
logging.file.max-size=100MB
logging.file.max-history=30

# ==============================================
# ACTUATOR & MONITORING
# ==============================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Health Check Configuration
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.threshold=10MB
management.health.redis.enabled=true

# ==============================================
# API DOCUMENTATION
# ==============================================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# ==============================================
# VALIDATION
# ==============================================
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# ==============================================
# CORS CONFIGURATION (Docker)
# ==============================================
cors.allowed-origins=http://localhost:3000,http://localhost:4200,http://nginx,http://repeatwise-ui
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true
cors.max-age=3600

# ==============================================
# CACHE CONFIGURATION
# ==============================================
spring.cache.type=redis
spring.cache.cache-names=users,sets,cycles
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false

# ==============================================
# ASYNC CONFIGURATION
# ==============================================
spring.task.execution.pool.core-size=10
spring.task.execution.pool.max-size=30
spring.task.execution.pool.queue-capacity=200
spring.task.execution.thread-name-prefix=repeatwise-async-

# ==============================================
# ERROR HANDLING
# ==============================================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false

# ==============================================
# PERFORMANCE TUNING
# ==============================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# ==============================================
# SECURITY CONFIGURATION
# ==============================================
spring.security.user.name=admin
spring.security.user.password=admin123
