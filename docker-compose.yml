version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: repeatwise-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: repeatwise
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - repeatwise-network

  # Backend API
  backend:
    build:
      context: ./backend-api
      dockerfile: Dockerfile
    container_name: repeatwise-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/repeatwise
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JWT_SECRET: ${JWT_SECRET:-change-this-secret-in-production-min-32-chars}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - repeatwise-network

  # Frontend Web
  web:
    build:
      context: ./frontend-web
      dockerfile: Dockerfile
    container_name: repeatwise-web
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:80"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - repeatwise-network

networks:
  repeatwise-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
